/* tslint:disable */
/* eslint-disable */
/**
 * Farcaster Hub API
 * Perform basic queries of Farcaster state via the REST API of a Farcaster hub. See the [Neynar docs](https://docs.neynar.com/reference) for more details. 
 *
 * The version of the OpenAPI document: 2.7.1
 * Contact: team@neynar.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { HubEventMergeMessage } from './hub-event-merge-message';
// May contain unused imports in some cases
// @ts-ignore
import type { HubEventMergeOnChainEvent } from './hub-event-merge-on-chain-event';
// May contain unused imports in some cases
// @ts-ignore
import type { HubEventMergeUsernameProof } from './hub-event-merge-username-proof';
// May contain unused imports in some cases
// @ts-ignore
import type { HubEventPruneMessage } from './hub-event-prune-message';
// May contain unused imports in some cases
// @ts-ignore
import type { HubEventRevokeMessage } from './hub-event-revoke-message';
// May contain unused imports in some cases
// @ts-ignore
import type { MergeMessageBody } from './merge-message-body';
// May contain unused imports in some cases
// @ts-ignore
import type { MergeOnChainEventBody } from './merge-on-chain-event-body';
// May contain unused imports in some cases
// @ts-ignore
import type { MergeUserNameProofBody } from './merge-user-name-proof-body';
// May contain unused imports in some cases
// @ts-ignore
import type { PruneMessageBody } from './prune-message-body';
// May contain unused imports in some cases
// @ts-ignore
import type { RevokeMessageBody } from './revoke-message-body';

/**
 * @type HubEvent
 * @export
 */
export type HubEvent = { type: 'HUB_EVENT_TYPE_MERGE_MESSAGE' } & HubEventMergeMessage | { type: 'HUB_EVENT_TYPE_MERGE_ON_CHAIN_EVENT' } & HubEventMergeOnChainEvent | { type: 'HUB_EVENT_TYPE_MERGE_USERNAME_PROOF' } & HubEventMergeUsernameProof | { type: 'HUB_EVENT_TYPE_PRUNE_MESSAGE' } & HubEventPruneMessage | { type: 'HUB_EVENT_TYPE_REVOKE_MESSAGE' } & HubEventRevokeMessage;


